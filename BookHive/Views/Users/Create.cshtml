@model BookHive.Models.UserViewModel

@{
    ViewData["Title"] = "Crear Usuario 🆕";
}

<div class="main">
    <div class="reserve-card">
        <h2 class="title-inline">
            Crear nuevo usuario <span class="emoji">🆕</span>
        </h2>

        <div id="message" class="message"></div>

        <form id="formUser">
            <label for="Name">Nombre completo</label>
            <input id="Name" name="Name" required />

            <label for="Email">Correo electrónico</label>
            <input id="Email" name="Email" type="email" required />

            <label for="UserName">Nombre de usuario</label>
            <input id="UserName" name="UserName" required />

            <button type="submit" class="btn-reservar" id="btnCrearUsuario">Crear Usuario</button>
        </form>
    </div>
</div>

<style>
    .main {
        text-align: center;
        padding: 70px 20px 40px;
    }

    .reserve-card {
        background: white;
        width: 340px;
        margin: 40px auto;
        padding: 32px 28px;
        border-radius: 18px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.10);
        display: flex;
        flex-direction: column;
        align-items: center;
    }

        .reserve-card h2 {
            color: #1b5e20;
            margin-bottom: 18px;
            font-size: 2em;
        }

    .title-inline {
        color: #1b5e20;
        margin-bottom: 18px;
        font-size: 2em;
        white-space: nowrap; /* Fuerza todo en una sola línea */
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .emoji {
        font-size: 0.8em; /* Opcional: ajusta tamaño del emoji */
        line-height: 1;
    }


    label {
        display: block;
        color: #4a4a4a;
        font-weight: 500;
        margin-bottom: 6px;
        margin-top: 14px;
        text-align: left;
        width: 100%;
    }

    input {
        width: 100%;
        padding: 8px 10px;
        border: 1px solid #bdbdbd;
        border-radius: 7px;
        font-size: 1em;
        margin-bottom: 10px;
        background: #f9fdf9;
    }

    .btn-reservar {
        background-color: #43a047;
        color: #fff;
        border: none;
        padding: 12px 0;
        width: 100%;
        border-radius: 20px;
        font-size: 1.1em;
        font-weight: bold;
        margin-top: 18px;
        cursor: pointer;
        transition: background 0.2s;
    }

        .btn-reservar:hover:enabled {
            background-color: #388e3c;
        }

        .btn-reservar:disabled {
            background-color: #a5d6a7;
            cursor: not-allowed;
        }

    .message {
        margin-bottom: 15px;
        font-weight: bold;
    }

    .success {
        color: green;
    }

    .error {
        color: red;
    }
</style>

<script>
    document.getElementById('formUser').addEventListener('submit', function (e) {
        e.preventDefault();

        const btnCrearUsuario = document.getElementById('btnCrearUsuario');
        const name = document.getElementById('Name').value.trim();
        const email = document.getElementById('Email').value.trim();
        const userName = document.getElementById('UserName').value.trim();
        const messageDiv = document.getElementById('message');

        if (!name || !email || !userName) {
            messageDiv.textContent = 'Por favor, completa todos los campos.';
            messageDiv.className = 'message error';
            return;
        }

        // Deshabilitar el botón para evitar múltiples envíos
        btnCrearUsuario.disabled = true;
        btnCrearUsuario.style.cursor = 'not-allowed';

        const password = 'Dios123';
        const userTypeId = 1;

        const url = `https://bookhive-heaedbaqfgbacdhw.canadacentral-01.azurewebsites.net/api/User?name=${encodeURIComponent(name)}&email=${encodeURIComponent(email)}&UserName=${encodeURIComponent(userName)}&password=${encodeURIComponent(password)}&userTypeId=${userTypeId}`;

        fetch(url, {
            method: 'POST'
        })
        .then(response => {
            if (response.ok) {
                messageDiv.textContent = 'Usuario creado con éxito. Redirigiendo...';
                messageDiv.className = 'message success';
                this.reset();
                setTimeout(() => {
                    window.location.href = '/Users/Index'; // Redirige a Users/Index
                }, 1500);
            } else {
                messageDiv.textContent = 'Error al crear el usuario.';
                messageDiv.className = 'message error';
                btnCrearUsuario.disabled = false;
                btnCrearUsuario.style.cursor = 'pointer';
            }
        })
        .catch(error => {
            messageDiv.textContent = 'Error: ' + error;
            messageDiv.className = 'message error';
            btnCrearUsuario.disabled = false;
            btnCrearUsuario.style.cursor = 'pointer';
        });
    });
</script>

