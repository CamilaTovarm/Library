<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <title>Lista de Usuarios 🚫</title>
    <style>
        body {
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(145deg, #e8f5e9, #f1f8f4);
        }

        .main {
            max-width: 600px;
            margin: 40px auto;
            padding: 20px;
            text-align: center;
        }

        h1 {
            color: #1b5e20;
            margin-bottom: 30px;
        }

        .users-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .user-item {
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            margin-bottom: 15px;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .user-info {
            text-align: left;
        }

        .user-name {
            font-weight: bold;
            font-size: 1.1em;
            color: #2d7a41;
        }

        .user-email {
            font-size: 0.9em;
            color: #555;
        }

        .btn-delete {
            background-color: #e53935;
            color: white;
            border: none;
            border-radius: 12px;
            padding: 8px 16px;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .btn-delete:hover {
                background-color: #b71c1c;
            }

        .message {
            font-weight: bold;
            margin-bottom: 20px;
        }

        .success {
            color: green;
        }

        .error {
            color: red;
        }

        @@media (max-width: 480px) {
            .user-item

        {
            flex-direction: column;
            align-items: flex-start;
        }

        .btn-delete {
            margin-top: 10px;
            width: 100%;
        }

        }
    </style>
</head>
<body>
    <div class="main">
        <h1>Eliminar Usuarios Activos 🚫</h1>
        <div id="message" class="message"></div>
        <ul id="usersList" class="users-list">
            <!-- Usuarios se cargarán aquí -->
        </ul>
    </div>

    <script>
        const apiBase = 'https://bookhive-heaedbaqfgbacdhw.canadacentral-01.azurewebsites.net/api';

        async function fetchUsers() {
            try {
                const response = await fetch(`${apiBase}/User`);
                if (!response.ok) throw new Error('Error al obtener usuarios');
                const users = await response.json();
                renderUsers(users);
            } catch (error) {
                showMessage(error.message, 'error');
            }
        }

        function renderUsers(users) {
            const container = document.getElementById('usersList');
            container.innerHTML = '';

            // Filtrar usuarios activos (state === false)
            const activeUsers = users.filter(user => user.state === false);

            if (!activeUsers.length) {
                container.innerHTML = '<li>No hay usuarios activos disponibles.</li>';
                return;
            }

            activeUsers.forEach(user => {
                const userId = user.IdUser || user.userId || user.id; // Ajusta según el JSON

                const li = document.createElement('li');
                li.className = 'user-item';

                li.innerHTML = `
                    <div class="user-info">
                        <div class="user-name">${escapeHtml(user.name || user.Name || '')}</div>
                        <div class="user-email">${escapeHtml(user.email || user.Email || '')}</div>
                    </div>
                    <button class="btn-delete" data-id="${userId}">Eliminar</button>
                `;

                container.appendChild(li);
            });

            // Asignar evento eliminar a cada botón
            document.querySelectorAll('.btn-delete').forEach(btn => {
                btn.addEventListener('click', async () => {
                    const id = btn.getAttribute('data-id');
                    if (id && confirm('¿Estás seguro de eliminar este usuario?')) {
                        await deleteUser(id);
                    }
                });
            });
        }

        async function deleteUser(id) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = '';
            messageDiv.className = 'message';

            try {
                const response = await fetch(`${apiBase}/User/Delete/${id}`, {
                    method: 'DELETE'
                });
                if (response.ok) {
                    showMessage('Usuario eliminado con éxito.', 'success');
                    await fetchUsers();
                } else {
                    const errorText = await response.text();
                    showMessage(`Error al eliminar usuario: ${errorText || response.statusText}`, 'error');
                }
            } catch (error) {
                showMessage(`Error en la petición: ${error.message}`, 'error');
            }
        }

        function showMessage(text, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = text;
            messageDiv.className = `message ${type}`;
        }

        function escapeHtml(text) {
            if (!text) return '';
            return text.replace(/[&<>"']/g, function(m) {
                return {'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m];
            });
        }

        // Cargar usuarios al iniciar
        fetchUsers();
    </script>
</body>
</html>
