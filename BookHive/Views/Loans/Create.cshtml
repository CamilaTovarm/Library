@model BookHive.Models.LoansViewModel

@{
    ViewData["Title"] = "Reservar Libro - BookHive";
}

    <div class="main">
        <div class="reserve-card">
            <h2>Reservar libro</h2>

            <div id="message" class="message"></div>

            <form id="reservationForm">
                <label for="UserId">Usuario</label>
                <select id="UserId" name="UserId" required>
                    <option value="">Selecciona tu usuario</option>
                    @foreach (var user in Model.User)
                    {
                        <option value="@user.Value">@user.Text</option>
                    }
                </select>

                <label for="BookId">Libro</label>
                <select id="BookId" name="BookId" required>
                    <option value="">Selecciona un libro</option>
                    @foreach (var book in Model.Book)
                    {
                        <option value="@book.Value">@book.Text</option>
                    }
                </select>

                <label for="LoanDate">Fecha de reserva</label>
                <input type="date" id="LoanDate" name="LoanDate" required min="@DateTime.Now.ToString("yyyy-MM-dd")" value="@Model.LoanDate.ToString("yyyy-MM-dd")" />

                <button type="submit" class="btn-reservar">Reservar libro</button>
            </form>
        </div>
    </div>

    <script>
        document.getElementById('reservationForm').addEventListener('submit', function (e) {
            e.preventDefault(); // Evitar envío normal

            const userId = document.getElementById('UserId').value;
            const bookId = document.getElementById('BookId').value;
            const loanDate = document.getElementById('LoanDate').value;
            const messageDiv = document.getElementById('message');

            if (!userId || !bookId || !loanDate) {
                messageDiv.textContent = 'Por favor, completa todos los campos.';
                messageDiv.className = 'message error';
                return;
            }

            const url = `https://bookhive-heaedbaqfgbacdhw.canadacentral-01.azurewebsites.net/api/Loans?userId=${encodeURIComponent(userId)}&bookId=${encodeURIComponent(bookId)}&loandDate=${encodeURIComponent(loanDate)}`;

            fetch(url, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                }
            })
            .then(response => {
                if (response.ok) {
                    messageDiv.textContent = '¡Reserva realizada con éxito! Redirigiendo...';
                    messageDiv.className = 'message success';
                    this.reset();
                    setTimeout(() => {
                        window.location.href = '/Loans/LoanGet'; // Redirige a LoanGet
                    }, 1500);
                } else {
                    messageDiv.textContent = 'Error al realizar la reserva.';
                    messageDiv.className = 'message error';
                }
        });
    </script>
